#library "UIXTEAM"

#include "zcommon.acs"
#include "SHRTFUNC.acs"

#import "8BDT.acs"

#define TEAMINFO_ID_OFFS    10000
#define TEAMINFO_ID_NAME    0100
#define TEAMINFO_ID_HP1     0200
#define TEAMINFO_ID_HP2     0300
#define TEAMINFO_ID_HP3     0400
#define TEAMINFO_ID_WEI     0500
#define TEAMINFO_ID_WE1     0600
#define TEAMINFO_ID_WE2     0700
#define TEAMINFO_ID_LOC     0800
#define TEAMINFO_ID_ARR1    0900
#define TEAMINFO_ID_ARR2    1000
#define TEAMINFO_ID_ARR3    1100
#define TEAMINFO_ID_ARR4    1200
#define TEAMINFO_ID_ARR5    1300
#define TEAMINFO_ID_ARR6    1400
#define TEAMINFO_ID_MUG     1500

#define TEAMINFO_BAR_FONT 0
#define TEAMINFO_BAR_START 2
#define TEAMINFO_BAR_MAX 5

#define TEAMINFO_BARMAX 100

str TeamBarsStrings[TEAMINFO_BAR_START+TEAMINFO_BAR_MAX+1][2] = {
    // Fonts
    {"UXHPHORZ", "UXHPVERT"},
    // Empty
    {"________________________________________________________________", "_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_\n_"},
    // 000-100
    {"ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB", "A\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB\nA\nB"},
    // 100-200
    {"CDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCD", "C\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD\nC\nD"},
    // 200-300
    {"EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEF", "E\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF\nE\nF"},
    // 300-400
    {"GHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGHGH", "G\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH\nG\nH"},
    // 400-500
    {"IJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJ", "I\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ"},
    // copy the last one here to buffer the "max health"
    {"IJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJIJ", "I\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ\nI\nJ"},
};

script "UITweaks_TeamInfo" (int cam, int cpn, int cv)
{
    SetActivator(cam);
    int team = GetPlayerInfo(PlayerNumber(), PLAYERINFO_TEAM);
    int bx = -600;
    int by = 300;

    int curPlay = 0;

    int yOffs = -96;

    int msgId = BASE_ID + TEAMINFO_ID_OFFS;

    if(team == 255) { // Spectator

    } else {
        for(int i = 0; i < MAX_PLAYERS_SHRT; i++) {
            if(i == cpn)
                continue;

            if(!PlayerInGame(i))
                continue;
            
            if(GetPlayerInfo(i, PLAYERINFO_TEAM) != team)
                continue;

            int curId = msgId + curPlay;
            int plrTid = i + PLN_TID_SHRT;
            
            int dist = (dist3D(0, i+PLN_TID_SHRT)) / 32;
            str loc = GetActorSectorLocation(i+PLN_TID_SHRT, false);

            SetFont("SMALLFONT");
            if(StrLen(loc) > 0) {
                displayMessageL(StrParam(n:i+1, s:" \cf(", s:loc, s:")"), curId+TEAMINFO_ID_NAME, bx, by + (curPlay * yOffs), 2.0, 2.0, 1.0);
            } else {
                displayMessageL(StrParam(n:i+1), curId+TEAMINFO_ID_NAME, bx, by + (curPlay * yOffs), 2.0, 2.0, 1.0);
            }

            int barX = bx;
            int barY = by + (curPlay * yOffs) + 16;

            int chp = GetActorProperty(plrTid, AProp_Health);
            
            int font = 0;

            if(cbmx10())
                chp /= 10;

            if(chp > 500)
                chp = 500;

            int tier, rem;

            if(chp <= 0) {
                tier = 0;
                rem = 0;
            } else {
                tier = chp/TEAMINFO_BARMAX;
                rem = chp%TEAMINFO_BARMAX;
            }

            displayBar1M(TeamBarsStrings[TEAMINFO_BAR_START+tier][font], TeamBarsStrings[TEAMINFO_BAR_START+tier-1][font], TeamBarsStrings[TEAMINFO_BAR_FONT][font], rem, TEAMINFO_BARMAX, curId+TEAMINFO_ID_HP1, barX, barY, 3.0, 3.0, 1.0);
            
            int baseYaw = GetActorAngle(cam) - VectorAngle(GetActorX(cam)-GetActorX(plrTid), GetActorY(cam)-GetActorY(plrTid)) + 0.25;
            int size = 32;
            int arrOffs = 24;
            int baseScale = 2.6;
            int scaleDiff = 0.6;
            SetFont("SMALLFONT");
            displayMessage(StrParam(s:"\ca", i:dist, s:"m"), curId+TEAMINFO_ID_ARR1, -4+bx-arrOffs, by+arrOffs+(curPlay * yOffs), baseScale-scaleDiff, baseScale-scaleDiff, 1.0);
            displayMessage("\c[UIXArrowBright]+", curId+TEAMINFO_ID_ARR2, -4+bx-arrOffs+FixedMul(cos(baseYaw),       size), by+arrOffs+(curPlay * yOffs)+FixedMul(sin(baseYaw),       size), baseScale, baseScale, 1.0);
            displayMessage("\c[UIXArrowMid]+", curId+TEAMINFO_ID_ARR3, -4+bx-arrOffs+FixedMul(cos(baseYaw+0.1), size), by+arrOffs+(curPlay * yOffs)+FixedMul(sin(baseYaw+0.1), size), baseScale-scaleDiff, baseScale-scaleDiff, 1.0);
            displayMessage("\c[UIXArrowMid]+", curId+TEAMINFO_ID_ARR4, -4+bx-arrOffs+FixedMul(cos(baseYaw-0.1), size), by+arrOffs+(curPlay * yOffs)+FixedMul(sin(baseYaw-0.1), size), baseScale-scaleDiff, baseScale-scaleDiff, 1.0);
            displayMessage("\c[UIXArrowDark]+", curId+TEAMINFO_ID_ARR5, -4+bx-arrOffs+FixedMul(cos(baseYaw+0.18), size), by+arrOffs+(curPlay * yOffs)+FixedMul(sin(baseYaw+0.18), size), baseScale-2*scaleDiff, baseScale-2*scaleDiff, 1.0);
            displayMessage("\c[UIXArrowDark]+", curId+TEAMINFO_ID_ARR6, -4+bx-arrOffs+FixedMul(cos(baseYaw-0.18), size), by+arrOffs+(curPlay * yOffs)+FixedMul(sin(baseYaw-0.18), size), baseScale-2*scaleDiff, baseScale-2*scaleDiff, 1.0);
            
            str face = getMugshotGraphicFromTID(plrTid);
            if(face != 0)
                if(StrLen(face) > 0)
                    displayIcon(face, curId+TEAMINFO_ID_MUG, -4+bx-arrOffs, by+arrOffs+(curPlay * yOffs), 6.0, 6.0, 1.0);

            // if(wep != -1) {
            //     int ammo = getWeaponAmmoType(wep);
            //     int mwe = getPlayerAmmoCapacity(i, ammo);
            //     int cwe = checkActorInventory(i+PLN_TID_SHRT, ammo);
            //     // PrintBold(i:mwe);
            //     displayIcon(getWeaponIcon(wep), curId+TEAMINFO_ID_WEI, barX+16, barY+32, 1.0, 1.0, 1.0);
            //     displayHBar("UIXWEFH", "UIXHPBH", cwe, mwe, curId+TEAMINFO_ID_WE1, curId+TEAMINFO_ID_WE2, barX+16, barY+16, 1.0, 1.0, 1.0);
            // }

            curPlay++;
        }
    }
}

// from pingbutton
function str getMugshotGraphicFromTID(int tid) {
	str class = GetActorClass(tid);

	int u = UniqueTID();
	if(!SpawnForced(StrParam(s:"PBMug_", s:class), 0, 0, 0, u, 0)) {
		return "";
	}
	Thing_Remove(u);

	return ACS_NamedExecuteWithResult(StrParam(s:"PBMug_", s:class), tid);
}

function str getPlayerName(int plr, int vert)
{
    str name = StrParam(n:1+plr);

    if(!vert)
        return name;

    bool update = false;

    str cvhorz = StrParam(s:"temp_uix_namestore_horz_", i:plr);
    str cvvert = StrParam(s:"temp_uix_namestore_vert_", i:plr);

    if(StrICmp(GetCvarString(cvhorz), name) != 0)
        update = true;

    if(update) {
        str vertName;

        vertName = rebuildName(name);

        SetCvarString(cvhorz, name);
        SetCvarString(cvvert, vertName);
        return vertName;
    }
    return GetCvarString(cvvert);
}

#define NAME_MAX 96
#define CHAR_COLOR 28

int nameSize;
int nameBuilder[NAME_MAX];

int nameColorless[NAME_MAX];
str colorSlots[NAME_MAX]; // no idea what size this should be tbh
int colorPos[NAME_MAX];

function str rebuildName(str name) {
    strCpy(a:nameBuilder, name);
    nameSize = StrLen(name);

    str outName = "";

    // for(int i = 0; i < nameSize; i++) {
    //     if(isAlphanumeric(nameBuilder[i])) {
    //         outName = StrParam(s:outName, c:nameBuilder[i]);
    //     } else {
    //         outName = StrParam(s:outName, s:"[", i:nameBuilder[i], s:"]");
    //     }
    // }

    // Log(s:outName);

    int inColor = 0;
    int colorStart;

    int colorLessSize = 0;
    int colorSize = 0;

    int i;

    for(i = 0; i < nameSize; i++) {
        switch(inColor) {
            case 0:
                if(nameBuilder[i] == CHAR_COLOR) {
                    colorPos[colorSize] = colorLessSize;
                    inColor = 1;
                } else {
                    nameColorless[colorLessSize++] = nameBuilder[i];
                }
                break;
            case 1: // check next char
                if(nameBuilder[i] == '[') {
                    colorStart = i;
                    inColor = 2;
                } else {
                    colorSlots[colorSize++] = StrParam(c:nameBuilder[i]);
                    inColor = 0;
                }
                break;
            case 2: // in big string
                if(nameBuilder[i] == ']') {
                    colorSlots[colorSize++] = StrMid(name, colorStart, i-colorStart+1);
                    // Log(s:"Ending color tag: ", s:colorSlots[colorSize-1], s:" - ", i:StrLen(colorSlots[colorSize-1]));
                    inColor = 0;
                }
                break;
        }
    }

    // for(i = 0; i < colorSize; i++) {
    //     Log(s:"Slot ", i:i, s:" - @", i:colorPos[i], s:": ", s:colorSlots[i]);
    // }

    // for(i = 0; i < colorLessSize; i++) {
    //     Log(c:nameColorless[i]);
    // }

    colorSize--;
    str ccblbsc = "-"; // currentColorBecauseLineBreaksStopColor - because acc won't let me compile with this long a var

    for(i = colorLessSize; i >= 0; i--) {

        if(nameColorless[i] != 0) {
            if(nameColorless[i] == ' ') {
                outName = StrParam(s:outName, c:'\n');
            } else {
                outName = StrParam(s:outName, s:"\c", s:ccblbsc, c:nameColorless[i], c:'\n');
            }
        }
        nameColorless[i] = 0;

        if(colorSize > 0) {
            if(i == colorPos[colorSize]) {
                ccblbsc = colorSlots[colorSize-1];
                colorSize--;
            }
        }
    }

    return outName;
}
