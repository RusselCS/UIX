#library "UITKS.acs"

#include "zcommon.acs"

#include "DTADD.acs"
#include "BARLIB.acs"

#include "SHRTFUNC.acs"

script "UIX_Notifier" OPEN CLIENTSIDE {
	int cpn = ConsolePlayerNumber();
	if(GetUserCvar(cpn,"UIX_CL_notification")) {
		Log(s:"\cfUI Extensions \cjenabled. Type \cgUIEXOptions\cj in console for available options.");
	}
}

script "UITweaks_Register" OPEN CLIENTSIDE
{
    if(isv6b()) DefineAssistDisplay("UITweaks_Runner");
}

#DEFINE MESSAGE_ID_START BASE_ID
int msgId = MESSAGE_ID_START;

script "UIX_GetNewID" (void)
{
	SetResultValue(msgId++);
}

script "UITweaks_Register_Server" OPEN
{
    // AddSpawnFunc("UIX_WeapBar_Register", DTADD_SFT_WEP);
}

#define UIT_MAX 2
str UI_Scripts[UIT_MAX][3] = {
    {"UITweaks_TeamInfo", "UIX_CL_TEAMINFO", "6A"},
    {"UIX_WeapBar", "UIX_CL_WEAPBAR", "6B"},
};

script "UITweaks_Runner" (int cam) CLIENTSIDE
{
    int cpn = ConsolePlayerNumber();
    if(!GetUserCvar(cpn, "UIX_CL_Enable"))
        terminate;

    for(int i = 0; i < UIT_MAX; i++) {
        int cv = GetUserCvar(cpn, UI_Scripts[i][1]);

        if(cv != 0)
            CallACS3(UI_Scripts[i][0], cam, cpn, cv);
    }
	msgId = MESSAGE_ID_START;
}

// v6a pickup script wrappers
script "uix_pickupcooldown" (int m, int a) { if(isv6b()) ACS_NamedExecuteWithResult("core_spawnPickupCooldown", m, a); }
script "uix_checkpickupcooldown" (void) { if(isv6b()) ACS_NamedExecuteWithResult("core_checkClientPickupCooldown"); }

// [Russ] v6a flow (backporting code from v6b and then gutting it)
// backbone of this code is by Jax, mutilated by Russel
Script "UIX6A_Runner" OPEN CLIENTSIDE {
	if(isv6b()) terminate;

	int cpn = ConsolePlayerNumber();
	int validCam = 0;
	while(true) {
		validCam = AssistDisplayFunc(cpn, validCam);
		delay(1);
	}
}

function int AssistDisplayFunc(int cpn, int validCam) {

    if(!GetUserCvar(cpn, "UIX_CL_Enable"))
        return 0;
    
	int cam = CheckPlayerCamera(cpn);
	if((cam > 0 && cam < PLN_TID_SHRT) || cam >= PLN_TID_SHRT + MAX_PLAYERS_SHRT) {
		if(validCam != 0 && PlayerInGame(validCam - PLN_TID_SHRT) && ThingCount(T_NONE, validCam) > 0) {
			cam = validCam;
		} else if (validCam != 0 && PlayerInGame(validCam - PLN_TID_SHRT)) {
			return validCam;
		} else {
			return 0;
		}
	}
	if(cam >= PLN_TID_SHRT && cam < PLN_TID_SHRT + MAX_PLAYERS_SHRT) {
		AssistDisplayFunc2(cam);
	}
	return cam;
}

function void AssistDisplayFunc2(int cam) {
	for(int i = 0; i<UIT_MAX; i++) {
        if(UI_Scripts[i][2] == "6A") {
            if(GetUserCvar(ConsolePlayerNumber(), UI_Scripts[i][1])) {
                CallACS2(UI_Scripts[i][0],cam,ConsolePlayerNumber());
            }
        }
    }
}
